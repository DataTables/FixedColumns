<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="html-wide" table-class="stripe row-border order-column" order="2">

<css lib="datatables fixedcolumns buttons">
	/* Ensure that the demo table scrolls */
	th, td { white-space: nowrap; }
	div.dataTables_wrapper {
		width: 800px;
		margin: 0 auto;
	}
</css>
<js lib="jquery datatables fixedcolumns buttons">
<![CDATA[
$('#example').DataTable({
	buttons: [
		{
			extend: 'fixedColumns',
			text: 'FixedColumns',
			config: {
				start: 1,
				end: 0
			}
		}
	],
	dom: 'Blfrtip',
	paging: false,
	scrollCollapse: true,
	scrollX: true,
	scrollY: 300
});
]]>
</js>

<js-vanilla>
<![CDATA[
new DataTable('#example', {
	buttons: [
		{
			extend: 'fixedColumns',
			text: 'FixedColumns',
			config: {
				start: 1,
				end: 0
			}
		}
	],
	dom: 'Blfrtip',
	paging: false,
	scrollCollapse: true,
	scrollX: true,
	scrollY: 300
});
]]>
</js-vanilla>

<title lib="FixedColumns">Buttons initialisation</title>

<info><![CDATA[

This example shows how to initialise and use FixedColumns via a button. This button can then be used to toggle between having the columns fixed on the table and not.

The number of columns fixed to the start and end is set within that buttons `config` property. The values within that property are the same as `-init fixedColumns.start` and `-init fixedColumns.end`.

]]></info>

</dt-example>
