<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="html-wide" table-class="stripe row-border order-column nowrap" order="3">

<css lib="datatables fixedcolumns">
div.info button {
	margin-bottom: 0.5em;
}
</css>
<js lib="jquery datatables fixedcolumns">
<![CDATA[

var table = $('#example').DataTable({
	fixedColumns: true,
	paging: false,
	scrollCollapse: true,
	scrollX: true,
	scrollY: 300
});

$('#increaseStart').on('click', function () {
	let fc = table.fixedColumns();

	fc.start(fc.start() + 1);

	$('#click-output').prepend('<div>Set fixed columns start: ' + fc.start() + '</div>');
});

$('#decreaseStart').on('click', function () {
	let fc = table.fixedColumns();

	fc.start(fc.start() - 1);

	$('#click-output').prepend('<div>Set fixed columns start: ' + fc.start() + '</div>');
});

$('#increaseEnd').on('click', function () {
	let fc = table.fixedColumns();

	fc.end(fc.end() + 1);

	$('#click-output').prepend('<div>Set fixed columns end: ' + fc.end() + '</div>');
});

$('#decreaseEnd').on('click', function () {
	let fc = table.fixedColumns();

	fc.end(fc.end() - 1);

	$('#click-output').prepend('<div>Set fixed columns end: ' + fc.end() + '</div>');
});

]]>
</js>

<js-vanilla>
<![CDATA[
function addOutput(message) {
	let el = document.querySelector('#click-output');
	let div = document.createElement('div');

	div.textContent = message;
	el.prepend(div);
}

let table = new DataTable('#example', {
	fixedColumns: true,
	paging: false,
	scrollCollapse: true,
	scrollX: true,
	scrollY: 300
});

document.querySelector('#increaseStart').addEventListener('click', function () {
	let fc = table.fixedColumns();

	fc.start(fc.start() + 1);

	addOutput('Set fixed columns start: ' + fc.start());
});

document.querySelector('#decreaseStart').addEventListener('click', function () {
	let fc = table.fixedColumns();

	fc.start(fc.start() - 1);

	addOutput('Set fixed columns start: ' + fc.start());
});

document.querySelector('#increaseEnd').addEventListener('click', function () {
	let fc = table.fixedColumns();

	fc.end(fc.end() + 1);

	addOutput('Set fixed columns end: ' + fc.end());
});

document.querySelector('#decreaseEnd').addEventListener('click', function () {
	let fc = table.fixedColumns();

	fc.end(fc.end() - 1);

	addOutput('Set fixed columns end: ' + fc.end());
});

]]>
</js-vanilla>

<title lib="FixedColumns">DataTables API</title>

<info><![CDATA[

This example shows a possible use of the FixedColumns API methods that can be used to control the fixed state of table columns. They are:

* `-api fixedColumns().start()` - Getter/Setter for the number of fixed columns at the start of the table
* `-api fixedColumns().end()` - Getter/Setter for the number of fixed columns and the end of the table.

In this example there are 4 buttons to increase / decrease the number of start / end fixed columns. They do this by getting the current number of fixed columns, then making another call to increase or decrease that value. See the code below the table.

<button id="increaseStart">Increase number of fixed columns at start</button><br>
<button id="decreaseStart">Decrease number of fixed columns at start</button><br>
<button id="increaseEnd">Increase number of fixed columns at end</button><br>
<button id="decreaseEnd">Decrease number of fixed columns at end</button><br>

]]></info>

<demo-html>
	<div id="click-output" class="box">Number of FixedColumns - new values added at the top</div>
</demo-html>

</dt-example>
